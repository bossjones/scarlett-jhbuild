---
- hosts: all
  become: yes
  become_method: sudo
  # SOURCE: https://docs.ansible.com/ansible/latest/playbooks_environment.html
  environment:
    SHELL: /bin/bash
  vars:
    ulimit_config:
      - domain: '*'
        type: soft
        item: nofile
        value: 64000
      - domain: '*'
        type: hard
        item: nofile
        value: 64000
    bossjones__user: "vagrant"
    bossjones__group: "vagrant"
  roles:
    - role: ulimit
  # SOURCE: https://github.com/mattiasb/MachineSetup/blob/master/fedora-desktop-user.yaml
  # tasks:

  #   - name: Update Python 3 Packages
  #     tags:
  #       - update
  #       - packages
  #       - python3
  #     pip:
  #       name: "{{ item }}"
  #       extra_args: --user
  #       executable: pip3
  #     with_items:
  #       - autopep8
  #       - flake8
  #       - importmagic
  #       - ipdb
  #       - ipython
  #       - isort
  #       - jedi
  #       - jmespath-terminal
  #       - yasha


- hosts: all
  become: yes
  become_method: sudo
  tags:
    - scarlett-jhbuild-sysdeps

  vars:
    pip_install_packages:
      - name: docker
    # Edition can be one of: 'ce' (Community Edition) or 'ee' (Enterprise Edition).
    docker_edition: 'ce'
    # docker_package: "docker-{{ docker_edition }}"
    docker_package_state: present
    docker_service_state: started
    docker_service_enabled: yes
    docker_restart_handler_state: restarted
    docker_install_compose: True
    docker_compose_version: "1.22.0"
    docker_compose_path: /usr/local/bin/docker-compose
    docker_apt_release_channel: stable
    docker_apt_arch: amd64
    docker_apt_repository: "deb [arch={{ docker_apt_arch }}] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"
    docker_apt_ignore_key_error: True
    docker_users:
      - vagrant

  pre_tasks:

    # Update apt packages
    - name: Update apt packages
      become: yes
      apt:
        update_cache=yes

    # Upgrade apt packages
    - name: Upgrade apt packages
      become: yes
      apt:
        upgrade=dist

    - name: debian | Installing Pre-Reqs
      apt:
        name: "{{ item }}"
        state: present
      become: True
      with_items:
        - atop
        - bash
        - bash-completion
        - binutils-dev
        - bison
        - bridge-utils
        - build-essential
        - ca-certificates
        - ccze
        - dstat
        - elfutils
        - file
        - flex
        - git
        - htop
        - iftop
        - iotop
        - iperf
        - iperf3
        - lsof
        - ltrace
        - make
        - mercurial
        - mtr
        - net-tools
        - ngrep
        - nmap
        - ntpdate
        - perf-tools-unstable
        - perl
        - procps
        - psmisc
        - pv
        - python-dev
        - ruby2.5
        - socat
        - strace
        - sysstat
        - tar
        - tcpdump
        - tree
        - vim
        - wget
        - mlocate
        - ncdu
        - direnv
        - ccache

  roles:
    - geerlingguy.pip
    - geerlingguy.docker

- hosts: all
  # NOTE: In order to populate special var ansible_pkg_mgr, need to enable gather_facts
  gather_facts: True
  tags:
    - rbenv
  become: yes
  become_method: sudo
  # SOURCE: https://github.com/mattiasb/MachineSetup/blob/master/fedora-desktop-user.yaml
  environment:
    SHELL: /bin/bash
    # PATH: "{{ ansible_env.PATH }}:{{ ansible_user_dir }}/.local/bin/"
  vars:
    bossjones__user: "vagrant"
    bossjones__group: "vagrant"
  roles:
    - role: zzet.rbenv
      default_gems_file: "/home/{{ bossjones__user }}/.dotfiles/ruby/default-gems"
      # TODO: These values need to be changed
      rbenv:
        env: user
        version: v1.1.1
        default_ruby: 2.4.2
        rubies:
        - version: 2.4.2
      rbenv_users:
      - "{{ bossjones__user }}"
      rbenv_repo: "https://github.com/rbenv/rbenv.git"
      rbenv_plugins:
        - { name: "rbenv-vars",         repo: "https://github.com/rbenv/rbenv-vars.git",         version: "master" }
        - { name: "ruby-build",         repo: "https://github.com/rbenv/ruby-build.git",         version: "master" }
        - { name: "rbenv-default-gems", repo: "https://github.com/rbenv/rbenv-default-gems.git", version: "master" }
        - { name: "rbenv-installer",    repo: "https://github.com/rbenv/rbenv-installer.git",    version: "master" }
        - { name: "rbenv-update",       repo: "https://github.com/rkh/rbenv-update.git",         version: "master" }
        - { name: "rbenv-whatis",       repo: "https://github.com/rkh/rbenv-whatis.git",         version: "master" }
        - { name: "rbenv-use",          repo: "https://github.com/rkh/rbenv-use.git",            version: "master" }
        - { name: "rbenv-ctags",        repo: "https://github.com/tpope/rbenv-ctags.git",        version: "master" }
        - { name: "rbenv-each",         repo: "https://github.com/rbenv/rbenv-each.git",         version: "master" }
        - { name: "rbenv-aliases",      repo: "https://github.com/tpope/rbenv-aliases.git",      version: "master" }

      rbenv_root: "{% if rbenv.env == 'system' %}/usr/local/rbenv{% else %}~/.rbenv{% endif %}"



  tasks:
  - name: Append runserver_plus .bashrc alias
    lineinfile:
      dest: "/home/{{ bossjones__user }}/.bashrc"
      line: "{{ item }}"
    become: yes
    become_user: "{{ bossjones__user }}"
    with_items:
    - 'export LANG=C.UTF-8'
    - 'export PATH="~/.local/bin:${PATH}"'
    - 'export PATH="~/jhbuild/bin:${PATH}"'
    - 'export PATH="/usr/lib/ccache:${PATH}"'
    - 'export PATH="/usr/lib/ccache:${PATH}"'
    - 'export PATH="/usr/share/bcc/tools:${PATH}"'
    - 'eval "$(rbenv init -)"'
    - 'eval "$(direnv hook bash)"'
    - 'export PATH="/usr/share/bcc/tools:${PATH}"'




    # - name: Set locale variables
    #   become: false
    #   lineinfile: >
    #     dest="{{ ansible_env.HOME }}/.bashrc"
    #     line="export {{ item }}"
    #     insertafter=EOF
    #     state=present
    #   with_items:
    #     - "LANG=en_US.UTF-8"
    #     - "LANGUAGE=en_US:en"
    #     - "LC_ALL=en_US.UTF-8"
