FROM ubuntu:bionic

LABEL Maintainer "Malcolm Jones <bossjones@theblacktonystark.com>"

ENV NON_ROOT_USER=developer \
    container=docker \
    TERM=xterm-256color

# SOURCE: https://github.com/ishiland/docker-python-geosupport/blob/9a670fe15ffca194226ce77da13b54014dbe42c3/Dockerfile
# Unable to set GEOFILES and LD_LIBRARY_PATH based on defined geosupport_version. Need additional logic to
# get the name of the `version-18b_` directory.
# ENV PYTHON_PATH=/usr/lib/python$PYTHON_VERSION \
#     PATH="/usr/lib/python$PYTHON_VERSION/bin/:${PATH}" \
#     GEOFILES="/geosupport/version-18b_18.2/fls/"\
#     LD_LIBRARY_PATH="/geosupport/version-18b_18.2/lib/${LD_LIBRARY_PATH}"\
#     geosupport_version=18b

ARG HOST_USER_ID=1000
ENV HOST_USER_ID ${HOST_USER_ID}
ARG HOST_GROUP_ID=1000
ENV HOST_GROUP_ID ${HOST_GROUP_ID}

# libboost-all-dev

RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
    sudo \
    bash-completion \
    apt-file \
    autoconf \
    automake \
    gettext \
    yelp-tools \
    flex \
    bison \
    build-essential \
    ccache \
    curl \
    dbus \
    gir1.2-gtk-3.0 \
    git \
    gobject-introspection \
    lcov \
    libbz2-dev \
    libcairo2-dev \
    libffi-dev \
    libgirepository1.0-dev \
    libglib2.0-dev \
    libgtk-3-0 \
    libreadline-dev \
    libsqlite3-dev \
    libssl-dev \
    ninja-build \
    python3-pip \
    xauth \
    pulseaudio-utils \
    gstreamer1.0-pulseaudio \
    libcanberra-pulse \
    libpulse-dev \
    libpulse-mainloop-glib0 \
    libpulse0 \
    xvfb \
    vim \
    && \
        apt-get update \
    && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y libegl1-mesa-dev libxklavier-dev libudisks2-dev libdmapsharing-3.0-dev libplist-dev nettle-dev libgphoto2-dev liblcms2-dev libfuse-dev libsane-dev libxt-dev libical-dev libgbm-dev valgrind libusb-1.0-0-dev libxcb-res0-dev xserver-xorg-input-wacom libstartup-notification0-dev libgexiv2-dev libarchive-dev libgl1-mesa-dev libfwup-dev libgnutls28-dev libpoppler-glib-dev libnma-dev libtag1-dev libusb-1.0-0-dev libndp-dev uuid-dev libgraphviz-dev libbluray-dev libcdio-paranoia-dev libsmbclient-dev libmtp-dev libv4l-dev libnfs-dev libpwquality-dev libxft-dev libsystemd-dev libnss3-dev libseccomp-dev libexiv2-dev check libhunspell-dev libmtdev-dev libanthy-dev libxrandr-dev libxdamage-dev libopus-dev libxi-dev libp11-kit-dev libtasn1-6-dev libwavpack-dev libnl-route-3-dev libcanberra-gtk-dev libxtst-dev libexempi-dev libudev-dev libplymouth-dev libxfixes-dev libunwind-dev libcaribou-dev libpolkit-agent-1-dev libavahi-gobject-dev libpolkit-gobject-1-dev dbus-tests libnl-genl-3-dev libxcb-dri2-0-dev liboauth-dev libpsl-dev libdrm-dev libevdev-dev libnspr4-dev libcanberra-gtk3-dev libexif-dev libvpx-dev libusbredirhost-dev libsndfile1-dev libxkbfile-dev libelf-dev libhangul-dev libxkbcommon-dev libxml2-dev libdotconf-dev libmusicbrainz5-dev libxslt1-dev libraw-dev libdbus-glib-1-dev libegl1-mesa-dev libnl-3-dev libxi-dev libsource-highlight-dev libvirt-dev libxcb-randr0-dev libimobiledevice-dev libgles2-mesa-dev libxkbcommon-x11-dev nettle-dev libxcomposite-dev libflac-dev libxcursor-dev libdvdread-dev libproxy-dev libkyotocabinet-dev libwebkit2gtk-4.0-dev libepoxy-dev flex valac xmlto texinfo xwayland libcups2-dev ruby libgpgme-dev gperf wget cmake sassc argyll intltool desktop-file-utils docbook-utils ragel doxygen yasm cargo libunistring-dev libmpfr-dev libhyphen-dev libkrb5-dev ppp-dev libxinerama-dev libmpc-dev libsasl2-dev libldap2-dev libpam0g-dev libdb5.3-dev libcap-dev libtiff5-dev libmagic-dev libgcrypt20-dev libiw-dev libjpeg-turbo8-dev libyaml-dev libwebp-dev libespeak-dev intltool libxslt1-dev docbook-xml docbook-xsl libgudev-1.0-dev gir1.2-gudev-1.0 libfl-dev fcitx-libs-dev libxcb-xkb-dev doxygen xorg-dev libepoxy-dev libdbus-1-dev libjpeg-dev libtiff-dev desktop-file-utils libwayland-egl1-mesa ragel libxml2-dev libxft-dev xmlto libxtst-dev xutils-dev \
    && \
        rm -rf /var/lib/apt/lists/*

# FIXME: Things we're missing. ran jhbuild sysdeps --install
# egl file valgrind libXft libhangul nss libseccomp check vala-bootstrap libpwquality cups mtdev libgphoto2 openldap libsndfile kyotocabinet lcms2 doxygen xmlto p11-kit dbus wireless-tools libical pam wavpack libXtst libraw wayland-egl desktop-file-utils dbus-glib plymouth libunwind libusb1 libvirt polkit-agent polkit-gobject espeak libarchive xorg-wacom libcap nettle xcb-dri2 docbook-xml libpsl xwayland startup-notification libdrm docbook-xsl ruby libtasn1 libevdev hyphen docbook-utils libexif libvpx nspr libxkbcommon libyaml libdmapsharing xkbcommon-x11 poppler libgcrypt udisks hunspell libxml2 libndp sane taglib libxslt libunistring libuuid libjpeg dotconf yasm libplist libwebp libnl libXi ppp exiv2 mesa-libGLES libXrandr sassc libXcomposite hogweed libv4l xcb-res libXcursor libproxy mpfr flex intltool libxklavier cargo argyll cyrus-sasl libdb libXdamage fuse libnma anthy fwupdate krb5 iptables libnl-route gbm wget libcanberra-gtk3 caribou libelf avahi smbclient libtiff libXinerama liboauth gexiv2 usbredir libusb1-1.0.9 gl xcb-randr gnutls mpc gpgme libXt libmusicbrainz gperf opus xi graphviz ragel libbluray libudev libcanberra libcdio-paranoia exempi source-highlight libsystemd libxkbfile libimobiledevice libXfixes cmake libmtp flac libnfs dvdread libnl-genl texinfo mozjs60 libepoxy WebKit

# apt-get install libegl1-mesa-dev libxklavier-dev libudisks2-dev libdmapsharing-3.0-dev libplist-dev nettle-dev libgphoto2-dev liblcms2-dev libfuse-dev libsane-dev libxt-dev libical-dev libgbm-dev valgrind libusb-1.0-0-dev libxcb-res0-dev xserver-xorg-input-wacom libstartup-notification0-dev libgexiv2-dev libarchive-dev libgl1-mesa-dev libfwup-dev libgnutls28-dev libpoppler-glib-dev libnma-dev libtag1-dev libusb-1.0-0-dev libndp-dev uuid-dev libgraphviz-dev libbluray-dev libcdio-paranoia-dev libsmbclient-dev libmtp-dev libv4l-dev libnfs-dev libpwquality-dev libxft-dev libsystemd-dev libnss3-dev libseccomp-dev libexiv2-dev check libhunspell-dev libmtdev-dev libanthy-dev libxrandr-dev libxdamage-dev libopus-dev libxi-dev libp11-kit-dev libtasn1-6-dev libwavpack-dev libnl-route-3-dev libcanberra-gtk-dev libxtst-dev libexempi-dev libudev-dev libplymouth-dev libxfixes-dev libunwind-dev libcaribou-dev libpolkit-agent-1-dev libavahi-gobject-dev libpolkit-gobject-1-dev dbus-tests libnl-genl-3-dev libxcb-dri2-0-dev liboauth-dev libpsl-dev libdrm-dev libevdev-dev libnspr4-dev libcanberra-gtk3-dev libexif-dev libvpx-dev libusbredirhost-dev libsndfile1-dev libxkbfile-dev libelf-dev libhangul-dev libxkbcommon-dev libxml2-dev libdotconf-dev libmusicbrainz5-dev libxslt1-dev libraw-dev libdbus-glib-1-dev libegl1-mesa-dev libnl-3-dev libxi-dev libsource-highlight-dev libvirt-dev libxcb-randr0-dev libimobiledevice-dev libgles2-mesa-dev libxkbcommon-x11-dev nettle-dev libxcomposite-dev libflac-dev libxcursor-dev libdvdread-dev libproxy-dev libkyotocabinet-dev libwebkit2gtk-4.0-dev libepoxy-dev flex valac xmlto texinfo xwayland libcups2-dev ruby libgpgme-dev gperf wget cmake sassc argyll intltool desktop-file-utils docbook-utils ragel doxygen yasm cargo libunistring-dev libmpfr-dev libhyphen-dev libkrb5-dev ppp-dev libxinerama-dev libmpc-dev libsasl2-dev libldap2-dev libpam0g-dev libdb5.3-dev libcap-dev libtiff5-dev libmagic-dev libgcrypt20-dev libiw-dev libjpeg-turbo8-dev libyaml-dev libwebp-dev libespeak-dev intltool libxslt1-dev docbook-xml docbook-xsl libgudev-1.0-dev gir1.2-gudev-1.0 libfl-dev fcitx-libs-dev libxcb-xkb-dev doxygen xorg-dev libepoxy-dev libdbus-1-dev libjpeg-dev libtiff-dev desktop-file-utils libwayland-egl1-mesa ragel libxml2-dev libxft-dev xmlto libxtst-dev

# intltool (required=0.50.2)
# libxslt (libxslt.pc, required=1.1.26)
# docbook-xml
# docbook-xsl
# gudev (gudev-1.0.pc, required=173)
# flex (required=2.0)
# xcb-xkb (xcb-xkb.pc, required=1.10)
# doxygen (required=1.8.1)
# xorg-macros (xorg-macros.pc)
# libepoxy (epoxy.pc, required=1.2)
# dbus (dbus-1.pc, required=1.4.10)
# libjpeg
# libtiff
# desktop-file-utils (required=0.20)
# wayland-egl (wayland-egl.pc, required=1.0)
# ragel
# libxml2 (libxml-2.0.pc, required=2.7.8)
# libXft (xft.pc, required=2.0.0)
# xmlto
# libXtst (xtst.pc, required=1)

RUN set -xe \
    && useradd -U -d /home/${NON_ROOT_USER} -m -r -G adm,tty,audio ${NON_ROOT_USER} \
    && usermod -a -G ${NON_ROOT_USER} -s /bin/bash -u ${HOST_USER_ID} ${NON_ROOT_USER} \
    && groupmod -g ${HOST_GROUP_ID} ${NON_ROOT_USER} \
    && ( mkdir /home/${NON_ROOT_USER}/.ssh \
    && chmod og-rwx /home/${NON_ROOT_USER}/.ssh \
    && echo "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key" > /home/${NON_ROOT_USER}/.ssh/authorized_keys \
    ) \
    && echo "${NON_ROOT_USER}     ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers \
    && echo "%${NON_ROOT_USER}     ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers \
    && cat /etc/sudoers \
    && echo "${NON_ROOT_USER}:${NON_ROOT_USER}" | chpasswd && \
    mkdir /var/run/dbus && \
    mkdir -p /home/${NON_ROOT_USER}/.local/bin && \
    chown ${NON_ROOT_USER}:${NON_ROOT_USER} -Rv /home/${NON_ROOT_USER}

# ---------------------------------
# SOURCE: https://github.com/ishiland/docker-python-geosupport/blob/9a670fe15ffca194226ce77da13b54014dbe42c3/Dockerfile
# RUN set -ex ;\
#     # find MAJOR and MINOR python versions based on $PYTHON_VERSION
#     export PYTHON_MAJOR_VERSION=$(echo "${PYTHON_VERSION}" | rev | cut -d"." -f3-  | rev) ;\
#     export PYTHON_MINOR_VERSION=$(echo "${PYTHON_VERSION}" | rev | cut -d"." -f2-  | rev) ;\
#     # replacing default repositories with edge ones
#     echo "http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/community" >> /etc/apk/repositories ;\
#     echo "http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/main" >> /etc/apk/repositories ;\
#     # Add the packages, with a CDN-breakage fallback if needed
#     apk add --no-cache $PACKAGES || \
#     (sed -i -e 's/dl-cdn/dl-4/g' /etc/apk/repositories && apk add --no-cache $PACKAGES) ;\
#     # Add packages just for the python build process with a CDN-breakage fallback if needed
#     apk add --no-cache --virtual .build-deps $PYTHON_BUILD_PACKAGES || \
#     (sed -i -e 's/dl-cdn/dl-4/g' /etc/apk/repositories && apk add --no-cache --virtual .build-deps $PYTHON_BUILD_PACKAGES) ;\
#     # turn back the clock -- so hacky!
#     echo "http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/main/" > /etc/apk/repositories ;\
#     # use pyenv to download and compile specific python version
#     git clone --depth 1 https://github.com/pyenv/pyenv /usr/lib/pyenv ;\
#     PYENV_ROOT=/usr/lib/pyenv /usr/lib/pyenv/bin/pyenv install $PYTHON_VERSION ;\
#     # move specific version to correct path delete pyenv, no longer needed
#     mv /usr/lib/pyenv/versions/$PYTHON_VERSION/ $PYTHON_PATH ;\
#     rm -rfv /usr/lib/pyenv ;\
#     # change the path on the header of every file from PYENV_ROOT to PYTHON_PATH
#     cd $PYTHON_PATH/bin/ && sed -i "s+/usr/lib/pyenv/versions/$PYTHON_VERSION/+$PYTHON_PATH/+g" * ;\
#     # delete binary "duplicates" and replace them with symlinks
#     # this also optimizes space since they are actually the same binary
#     rm -f $PYTHON_PATH/bin/python$PYTHON_MAJOR_VERSION \
#     $PYTHON_PATH/bin/python$PYTHON_MINOR_VERSION \
#     $PYTHON_PATH/bin/python$PYTHON_MAJOR_VERSION-config \
#     $PYTHON_PATH/bin/python$PYTHON_MINOR_VERSION-config ;\
#     ln -sf $PYTHON_PATH/bin/python $PYTHON_PATH/bin/python$PYTHON_MAJOR_VERSION ;\
#     ln -sf $PYTHON_PATH/bin/python $PYTHON_PATH/bin/python$PYTHON_MINOR_VERSION ;\
#     ln -sf $PYTHON_PATH/bin/python-config $PYTHON_PATH/bin/python$PYTHON_MAJOR_VERSION-config ;\
#     ln -sf $PYTHON_PATH/bin/python-config $PYTHON_PATH/bin/python$PYTHON_MINOR_VERSION-config ;\
#     # delete files to to reduce container size
#     find /usr/lib/python$PYTHON_VERSION -depth \( -name '*.pyo' -o -name '*.pyc' -o -name 'test' -o -name 'tests' \) -exec rm -rf '{}' + ;\
#     # remove build dependencies and any leftover apk cache
#     apk del --no-cache --purge .build-deps ;\
#     rm -rf /var/cache/apk/*
# ---------------------------------


USER ${NON_ROOT_USER}
WORKDIR /home/${NON_ROOT_USER}

ENV LANG C.UTF-8
ENV CI true
ENV PYENV_ROOT /home/${NON_ROOT_USER}/.pyenv
ENV PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"
ENV PYTHON_CONFIGURE_OPTS="--enable-shared"

RUN curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash && \
    git clone https://github.com/jawshooah/pyenv-default-packages ${PYENV_ROOT}/plugins/pyenv-default-packages && \
    find ${PYENV_ROOT} -name "*.tmp" -exec rm {} \; && \
    find ${PYENV_ROOT} -type d -name ".git" -prune -exec rm -rf {} \;

RUN PYTHONDONTWRITEBYTECODE=true pyenv install 2.7.14
RUN PYTHONDONTWRITEBYTECODE=true pyenv install 3.6.5
RUN PYTHONDONTWRITEBYTECODE=true pyenv install --debug 3.7.0

# Cloning into '/home/developer/.pyenv'...
# Cloning into '/home/developer/.pyenv/plugins/pyenv-doctor'...
# Cloning into '/home/developer/.pyenv/plugins/pyenv-installer'...
# Cloning into '/home/developer/.pyenv/plugins/pyenv-update'...
# Cloning into '/home/developer/.pyenv/plugins/pyenv-virtualenv'...
# Cloning into '/home/developer/.pyenv/plugins/pyenv-which-ext'...
# Cloning into '/home/developer/.pyenv/plugins/pyenv-default-packages'...

ENV PATH="/home/${NON_ROOT_USER}/.local/bin:${PATH}"
ENV PATH="/usr/lib/ccache:${PATH}"
