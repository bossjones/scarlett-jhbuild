FROM ubuntu:bionic

LABEL Maintainer "Malcolm Jones <bossjones@theblacktonystark.com>"

ENV NON_ROOT_USER developer
ENV container docker
ENV TERM xterm-256color
ENV PYTHONDONTWRITEBYTECODE true

# SOURCE: https://github.com/ishiland/docker-python-geosupport/blob/9a670fe15ffca194226ce77da13b54014dbe42c3/Dockerfile
# Unable to set GEOFILES and LD_LIBRARY_PATH based on defined geosupport_version. Need additional logic to
# get the name of the `version-18b_` directory.
# ENV PYTHON_PATH=/usr/lib/python$PYTHON_VERSION \
#     PATH="/usr/lib/python$PYTHON_VERSION/bin/:${PATH}" \
#     GEOFILES="/geosupport/version-18b_18.2/fls/"\
#     LD_LIBRARY_PATH="/geosupport/version-18b_18.2/lib/${LD_LIBRARY_PATH}"\
#     geosupport_version=18b

ARG HOST_USER_ID=1000
ENV HOST_USER_ID ${HOST_USER_ID}
ARG HOST_GROUP_ID=1000
ENV HOST_GROUP_ID ${HOST_GROUP_ID}

RUN apt-get update && apt-get install -y \
    sudo \
    build-essential \
    ccache \
    curl \
    dbus \
    gir1.2-gtk-3.0 \
    git \
    gobject-introspection \
    lcov \
    libbz2-dev \
    libcairo2-dev \
    libffi-dev \
    libgirepository1.0-dev \
    libglib2.0-dev \
    libgtk-3-0 \
    libreadline-dev \
    libsqlite3-dev \
    libssl-dev \
    ninja-build \
    python3-pip \
    xauth \
    pulseaudio-utils \
    gstreamer1.0-pulseaudio \
    libcanberra-pulse \
    libpulse-dev \
    libpulse-mainloop-glib0 \
    libpulse0 \
    xvfb \
    && rm -rf /var/lib/apt/lists/*

RUN set -xe \
    && useradd -U -d /home/${NON_ROOT_USER} -m -r -G adm,tty,audio ${NON_ROOT_USER} \
    && usermod -a -G ${NON_ROOT_USER} -s /bin/bash -u ${HOST_USER_ID} ${NON_ROOT_USER} \
    && groupmod -g ${HOST_GROUP_ID} ${NON_ROOT_USER} \
    && ( mkdir /home/${NON_ROOT_USER}/.ssh \
    && chmod og-rwx /home/${NON_ROOT_USER}/.ssh \
    && echo "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzIw+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoPkcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NOTd0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcWyLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQ== vagrant insecure public key" > /home/${NON_ROOT_USER}/.ssh/authorized_keys \
    ) \
    && echo "${NON_ROOT_USER}     ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers \
    && echo "%${NON_ROOT_USER}     ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers \
    && cat /etc/sudoers \
    && echo "${NON_ROOT_USER}:${NON_ROOT_USER}" | chpasswd && \
    mkdir /var/run/dbus && \
    chown ${NON_ROOT_USER}:${NON_ROOT_USER} -Rv /home/${NON_ROOT_USER}

# ---------------------------------
# SOURCE: https://github.com/ishiland/docker-python-geosupport/blob/9a670fe15ffca194226ce77da13b54014dbe42c3/Dockerfile
# RUN set -ex ;\
#     # find MAJOR and MINOR python versions based on $PYTHON_VERSION
#     export PYTHON_MAJOR_VERSION=$(echo "${PYTHON_VERSION}" | rev | cut -d"." -f3-  | rev) ;\
#     export PYTHON_MINOR_VERSION=$(echo "${PYTHON_VERSION}" | rev | cut -d"." -f2-  | rev) ;\
#     # replacing default repositories with edge ones
#     echo "http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/community" >> /etc/apk/repositories ;\
#     echo "http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/main" >> /etc/apk/repositories ;\
#     # Add the packages, with a CDN-breakage fallback if needed
#     apk add --no-cache $PACKAGES || \
#     (sed -i -e 's/dl-cdn/dl-4/g' /etc/apk/repositories && apk add --no-cache $PACKAGES) ;\
#     # Add packages just for the python build process with a CDN-breakage fallback if needed
#     apk add --no-cache --virtual .build-deps $PYTHON_BUILD_PACKAGES || \
#     (sed -i -e 's/dl-cdn/dl-4/g' /etc/apk/repositories && apk add --no-cache --virtual .build-deps $PYTHON_BUILD_PACKAGES) ;\
#     # turn back the clock -- so hacky!
#     echo "http://dl-cdn.alpinelinux.org/alpine/v$ALPINE_VERSION/main/" > /etc/apk/repositories ;\
#     # use pyenv to download and compile specific python version
#     git clone --depth 1 https://github.com/pyenv/pyenv /usr/lib/pyenv ;\
#     PYENV_ROOT=/usr/lib/pyenv /usr/lib/pyenv/bin/pyenv install $PYTHON_VERSION ;\
#     # move specific version to correct path delete pyenv, no longer needed
#     mv /usr/lib/pyenv/versions/$PYTHON_VERSION/ $PYTHON_PATH ;\
#     rm -rfv /usr/lib/pyenv ;\
#     # change the path on the header of every file from PYENV_ROOT to PYTHON_PATH
#     cd $PYTHON_PATH/bin/ && sed -i "s+/usr/lib/pyenv/versions/$PYTHON_VERSION/+$PYTHON_PATH/+g" * ;\
#     # delete binary "duplicates" and replace them with symlinks
#     # this also optimizes space since they are actually the same binary
#     rm -f $PYTHON_PATH/bin/python$PYTHON_MAJOR_VERSION \
#     $PYTHON_PATH/bin/python$PYTHON_MINOR_VERSION \
#     $PYTHON_PATH/bin/python$PYTHON_MAJOR_VERSION-config \
#     $PYTHON_PATH/bin/python$PYTHON_MINOR_VERSION-config ;\
#     ln -sf $PYTHON_PATH/bin/python $PYTHON_PATH/bin/python$PYTHON_MAJOR_VERSION ;\
#     ln -sf $PYTHON_PATH/bin/python $PYTHON_PATH/bin/python$PYTHON_MINOR_VERSION ;\
#     ln -sf $PYTHON_PATH/bin/python-config $PYTHON_PATH/bin/python$PYTHON_MAJOR_VERSION-config ;\
#     ln -sf $PYTHON_PATH/bin/python-config $PYTHON_PATH/bin/python$PYTHON_MINOR_VERSION-config ;\
#     # delete files to to reduce container size
#     find /usr/lib/python$PYTHON_VERSION -depth \( -name '*.pyo' -o -name '*.pyc' -o -name 'test' -o -name 'tests' \) -exec rm -rf '{}' + ;\
#     # remove build dependencies and any leftover apk cache
#     apk del --no-cache --purge .build-deps ;\
#     rm -rf /var/cache/apk/*
# ---------------------------------


USER ${NON_ROOT_USER}
WORKDIR /home/${NON_ROOT_USER}

ENV LANG C.UTF-8
ENV CI true
ENV PYENV_ROOT /home/${NON_ROOT_USER}/.pyenv
ENV PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"
ENV PYTHON_CONFIGURE_OPTS="--enable-shared"

RUN curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash

RUN pyenv install 2.7.14
# RUN pyenv install 3.5.6
RUN pyenv install 3.6.5
RUN pyenv install --debug 3.7.0
# RUN pyenv install pypy2.7-6.0.0
# RUN pyenv install pypy3.5-6.0.0

ENV PATH="/usr/lib/ccache:${PATH}"
